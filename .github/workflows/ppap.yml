name: PPAP

on:
  repository_dispatch:
    types:
      - ppap
      - v*

  push:
    branches:
      - main

jobs:
  init:
    name: Init
    runs-on: macos-14
    outputs:
      matrix: ${{ steps.set-matrix.outputs.value }}
      env: ${{ steps.set-env.outputs.value }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: InfluenceNews/rn-innews
          token: ${{ secrets.GH_PAT_INFLUENCE_NEWS }}
          # ref: ${{ github.event.client_payload.ref_name}}

      - name: Set matrix
        id: set-matrix
        run: |
          MATRIX="[{\"format\":\"ipa\",\"name\":\"macos-14\",\"platform\":\"ios\"},{\"format\":\"apk\",\"name\":\"ubuntu-22.04\",\"platform\":\"android\"}]"
          if [[ "$REF_NAME" =~ "prd" ]]; then
            MATRIX="[{\"format\":\"ipa\",\"name\":\"macos-14\",\"platform\":\"ios\"},{\"format\":\"apk\",\"name\":\"ubuntu-22.04\",\"platform\":\"android\"},{\"format\":\"aab\",\"name\":\"ubuntu-22.04\",\"platform\":\"android\"}]"
          fi
          echo "value=$MATRIX" >> $GITHUB_OUTPUT

      - name: Set env
        id: set-env
        run: |
          ENV='dev'
          if [[ "$REF_NAME" =~ "prd" ]]; then
            ENV='prd'
          elif [[ "$REF_NAME" =~ "stg" ]]; then
            ENV='stg'
          fi
          echo "value=$ENV" >> $GITHUB_OUTPUT

      - name: Log value
        run: |
          echo "tag-source: $REF_NAME"
          echo "matrix: ${{ steps.set-matrix.outputs.value }}"
          echo "env: ${{ steps.set-env.outputs.value }}"

  deploy:
    name: Deployment ${{ matrix.format }}
    needs: [init]
    continue-on-error: true
    strategy:
      fail-fast: true
      matrix:
        include: ${{ fromJson(needs.init.outputs.matrix) }}
    runs-on: ${{ matrix.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: InfluenceNews/rn-innews
          token: ${{ secrets.GH_PAT_INFLUENCE_NEWS }}
          # ref: ${{ github.event.client_payload.ref_name}}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - name: Setup cocoapods
        if: matrix.platform == 'ios'
        uses: maxim-lobanov/setup-cocoapods@v1
        with:
          version: 1.15.2

      - name: Set up JDK
        uses: actions/setup-java@v4
        if: matrix.platform == 'android'
        with:
          java-version: 21
          distribution: "temurin"

      - name: Setup Android SDK
        if: matrix.platform == 'android'
        uses: android-actions/setup-android@v3

      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1
        if: matrix.platform == 'android'
        with:
          ndk-version: r26c

      - name: Cache prebuild
        id: cache-prebuild
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ios
            android
          key: ${{ matrix.platform }}-cache-prebuild-${{ hashFiles('app.config.js') }}

      - name: Cache ios
        uses: irgaly/xcode-cache@v1
        if: matrix.platform == 'ios'
        with:
          key: xcode-cache-deriveddata-${{ needs.init.outputs.env }}-${{ hashFiles('app.config.js') }}
          restore-keys: xcode-cache-deriveddata-${{ needs.init.outputs.env }}-

      # - name: Run yarn install
      #   if: steps.cache-node-modules.outputs.cache-hit != 'true'
      #   uses: borales/actions-yarn@v5
      #   with:
      #     cmd: install --network-concurrency 1

      - name: Run expo prebuild
        if: steps.cache-prebuild.outputs.cache-hit != 'true'
        uses: borales/actions-yarn@v5
        with:
          cmd: prebuild:dev --platform ${{ matrix.platform }}

      - name: Fastlane match
        if: matrix.platform == 'ios'
        run: |
          chmod 400 .github/data/key/itcarz
          fastlane ios certificates
          fastlane ios update_settings_dev
        env:
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.GH_PAT_CARZ }}

      - name: Update ios version and build number
        if: matrix.platform == 'ios'
        run: fastlane ios update_version_and_build_number
        env:
          APP_VERSION: 1.0.3
          APP_BUILD_NUMBER: 12

      - name: Build ios
        if: matrix.format == 'ipa'
        run: fastlane ios build_ipa

      - name: Build apk
        if: matrix.format == 'apk'
        run: fastlane android build_apk

      - name: Build aab
        if: matrix.format == 'aab'
        run: fastlane android build_aab
