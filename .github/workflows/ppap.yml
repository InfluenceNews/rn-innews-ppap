name: PPAP

on:
  repository_dispatch:
    types:
      - ppap
      - v*

  push:
    branches:
      - main

jobs:
  init:
    name: Init
    runs-on: macos-14
    outputs:
      matrix: ${{ steps.set-matrix.outputs.value }}
      message-information: ${{ steps.get-message-information.outputs.value }}
      env: ${{ steps.set-env.outputs.value }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: InfluenceNews/rn-innews
          token: ${{ secrets.GH_PAT_INFLUENCE_NEWS }}
          # ref: ${{ github.event.client_payload.ref_name}}

      - name: Set matrix
        id: set-matrix
        run: |
          MATRIX="[{\"format\":\"IPA\",\"name\":\"macos-14\",\"platform\":\"IOS\"},{\"format\":\"APK\",\"name\":\"ubuntu-22.04\",\"platform\":\"ANDROID\"}]"
          if [[ "$REF_NAME" =~ "prd" ]]; then
            MATRIX="[{\"format\":\"IPA\",\"name\":\"macos-14\",\"platform\":\"IOS\"},{\"format\":\"APK\",\"name\":\"ubuntu-22.04\",\"platform\":\"ANDROID\"},{\"format\":\"AAB\",\"name\":\"ubuntu-22.04\",\"platform\":\"ANDROID\"}]"
          fi
          echo "value=$MATRIX" >> $GITHUB_OUTPUT

      - name: Set env
        id: set-env
        run: |
          ENV='dev'
          if [[ "$REF_NAME" =~ "prd" ]]; then
            ENV='prd'
          elif [[ "$REF_NAME" =~ "stg" ]]; then
            ENV='stg'
          fi
          echo "value=$ENV" >> $GITHUB_OUTPUT

      - name: Generate message
        id: get-message-information
        run: |
          source .github/scripts/utils.sh
          echo "value=$(get_message_information)" >> "$GITHUB_OUTPUT"
        timeout-minutes: 1

      - name: Log value
        run: |
          echo "tag-source: $REF_NAME"
          echo "matrix: ${{ steps.set-matrix.outputs.value }}"
          echo "message-information: ${{ steps.get-message-information.outputs.value }}"
          echo "env: ${{ steps.set-env.outputs.value }}"

  deploy:
    name: Deployment ${{ matrix.format }}
    needs: [init]
    continue-on-error: true
    strategy:
      fail-fast: true
      matrix:
        include: ${{ fromJson(needs.init.outputs.matrix) }}
    runs-on: ${{ matrix.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: InfluenceNews/rn-innews
          token: ${{ secrets.GH_PAT_INFLUENCE_NEWS }}
          # ref: ${{ github.event.client_payload.ref_name}}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - name: Setup cocoapods
        if: matrix.platform == 'IOS'
        uses: maxim-lobanov/setup-cocoapods@v1
        with:
          version: 1.15.2
      
      # NOTE: install libs
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ matrix.platform }}-cache-node-modules-${{ hashFiles('yarn.lock') }}
      
      - name: Run yarn install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        uses: borales/actions-yarn@v5
        with:
          cmd: install --network-concurrency 1

      - name: Remove native directories
        run: rm -rf ios android

      - name: Run expo prebuild
        uses: borales/actions-yarn@v5
        with:
          cmd: prebuild:dev --no-install 
      
      - name: Cache Pods
        if: matrix.platform == 'IOS'
        id: cache-pods
        uses: actions/cache@v4
        with:
          path: |
            ios/Pods
            ios/Podfile.lock
          key: cache-pods-${{ hashFiles('yarn.lock') }}

      - name: Pod install
        # if: ${{ (matrix.platform == 'IOS') && (steps.cache-pods.outputs.cache-hit != 'true') }}
        working-directory: ios
        run: pod install --repo-update

      - name: Fastlane match
        if: matrix.platform == 'IOS'
        run: |
          chmod 400 .github/data/key/itcarz
          fastlane ios certificates
          fastlane ios update_settings_dev
        env:
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.GH_PAT_CARZ }}

      - name: Update version and build number
        if: matrix.platform == 'IOS'
        run: fastlane ios update_version_and_build_number
        env: 
          APP_VERSION: 1.0.3
          APP_BUILD_NUMBER: 12

      - name: Build app
        if: matrix.platform == 'IOS'
        run: fastlane ios build_ipa